{
  "name": "github-review-manager",
  "displayName": "GitHub Review Manager",
  "description": "Manage GitHub pull request review requests with automatic updates and notifications.",
  "version": "0.0.41",
  "publisher": "Sado4",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "icon": "images/icon.png",
  "keywords": [
    "github",
    "pull request",
    "review",
    "monitor",
    "notification",
    "automation"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "githubReviewManager.refresh",
        "title": "Refresh Review Requests",
        "icon": "$(refresh)"
      },
      {
        "command": "githubReviewManager.openPR",
        "title": "Open PR in Browser"
      },
      {
        "command": "githubReviewManager.setToken",
        "title": "Set GitHub Token",
        "icon": "$(key)"
      },
      {
        "command": "githubReviewManager.clearToken",
        "title": "Clear GitHub Token",
        "icon": "$(trash)"
      },
      {
        "command": "githubReviewManager.setupFromStatusBar",
        "title": "Setup GitHub Token from Status Bar"
      },
      {
        "command": "githubReviewManager.requestAIReview",
        "title": "Generate AI Review Prompt",
        "icon": "$(robot)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "githubReviewManager",
          "title": "GitHub Review Manager",
          "icon": "$(git-pull-request)"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "githubReviewRequestsExplorer",
          "name": "Review Requests",
          "when": "githubReviewManager.hasRequests"
        }
      ],
      "githubReviewManager": [
        {
          "id": "githubReviewRequestsMain",
          "name": "Review Requests",
          "visibility": "visible"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "githubReviewManager.refresh",
          "when": "view == githubReviewRequestsMain || view == githubReviewRequestsExplorer",
          "group": "navigation@1"
        },
        {
          "command": "githubReviewManager.setToken",
          "when": "view == githubReviewRequestsMain || view == githubReviewRequestsExplorer",
          "group": "navigation@2"
        },
        {
          "command": "githubReviewManager.clearToken",
          "when": "view == githubReviewRequestsMain || view == githubReviewRequestsExplorer",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "githubReviewManager.requestAIReview",
          "when": "view == githubReviewRequestsMain && viewItem == reviewRequest || view == githubReviewRequestsExplorer && viewItem == reviewRequest",
          "group": "aiReview@1"
        }
      ]
    },
    "configuration": {
      "title": "GitHub Review Manager",
      "properties": {
        "githubReviewManager.refreshInterval": {
          "type": "number",
          "default": 300,
          "minimum": 60,
          "description": "Auto-refresh interval in seconds (default: 300 = 5 minutes, minimum: 60 seconds)"
        },
        "githubReviewManager.showNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Show notifications for new review requests"
        },
        "githubReviewManager.playSound": {
          "type": "boolean",
          "default": true,
          "description": "Play sound when new review requests are received"
        },
        "githubReviewManager.groupByRepository": {
          "type": "boolean",
          "default": true,
          "description": "Group review requests by repository"
        },
        "githubReviewManager.repositoryFilter": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+$",
            "patternErrorMessage": "Please use format: owner/repository-name (e.g., 'mycompany/web-app')"
          },
          "default": [],
          "markdownDescription": "**Filter to specific repositories only** üìÅ\n\nShow review requests only from these repositories:\n- **Format**: `owner/repository-name`\n- **Example**: `[\"mycompany/web-app\", \"myusername/personal-project\"]`\n- **Leave empty** to show **all repositories**\n\nüí° **Quick tip**: Copy repository names directly from GitHub URLs!\n\n‚úÖ **Valid examples**:\n- `github/docs`\n- `microsoft/vscode`\n- `my-company/api-server`\n\n‚ùå **Invalid formats**:\n- `just-repository-name` (missing owner)\n- `https://github.com/owner/repo` (full URL not needed)\n- `owner/repo/subfolder` (too many slashes)"
        }
      }
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Sado4/github-review-manager"
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "test:vscode": "vscode-test",
    "biome:check": "biome check .",
    "biome:fix": "biome check --write .",
    "biome:format": "biome format --write .",
    "format": "npm run biome:format",
    "lint": "npm run biome:check"
  },
  "dependencies": {
    "@octokit/rest": "^20.1.2"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.0.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.84.0",
    "@vitest/ui": "^3.2.4",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.2",
    "vitest": "^3.2.4",
    "webpack": "^5.99.9",
    "webpack-cli": "^6.0.1"
  }
}
